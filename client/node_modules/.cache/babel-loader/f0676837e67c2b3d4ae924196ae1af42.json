{"ast":null,"code":"var _jsxFileName = \"/Users/chadaniacharya/Desktop/flashback/client/src/components/Form/Form.js\";\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useStyles from './styles';\nimport { createPost, updatePost } from '../../actions/posts';\n\nconst Form = ({\n  currentId,\n  changeid\n}) => {\n  var _user$result3;\n\n  const [postData, setPostData] = useState({\n    title: '',\n    message: '',\n    tags: '',\n    selectedFiles: ''\n  });\n  const post = useSelector(state => currentId ? state.posts.find(p => p._id === currentId) : null);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const user = JSON.parse(localStorage.getItem('profile'));\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      var _user$result;\n\n      dispatch(updatePost(currentId, { ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name\n      }));\n    } else {\n      var _user$result2;\n\n      dispatch(createPost({ ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2.name\n      }));\n    }\n\n    clear();\n  };\n\n  const clear = () => {\n    changeid(null);\n    setPostData({\n      title: '',\n      message: '',\n      tags: '',\n      selectedFiles: ''\n    });\n  };\n\n  if (!(user === null || user === void 0 ? void 0 : (_user$result3 = user.result) === null || _user$result3 === void 0 ? void 0 : _user$result3.name)) {\n    return /*#__PURE__*/React.createElement(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, \"Please Sign In to create your own memories and like other's memories.\"));\n  }\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    className: `${classes.root} ${classes.form}`,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, currentId ? 'Editing' : 'Creating', \" a FlashBack\"), /*#__PURE__*/React.createElement(TextField, {\n    name: \"title\",\n    variant: \"outlined\",\n    label: \"Title\",\n    fullWidth: true,\n    value: postData.title,\n    onChange: e => setPostData({ ...postData,\n      title: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"message\",\n    variant: \"outlined\",\n    label: \"Message\",\n    fullWidth: true,\n    value: postData.message,\n    onChange: e => setPostData({ ...postData,\n      message: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"tags\",\n    variant: \"outlined\",\n    label: \"Tags\",\n    fullWidth: true,\n    value: postData.tags,\n    onChange: e => setPostData({ ...postData,\n      tags: e.target.value.split(',')\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.fileInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FileBase, {\n    type: \"file\",\n    multiple: false,\n    onDone: ({\n      base64\n    }) => setPostData({ ...postData,\n      selectedFile: base64\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttonSubmit,\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    type: \"submit\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    size: \"small\",\n    onClick: clear,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, \"Clear\")));\n};\n\nexport default Form;","map":{"version":3,"sources":["/Users/chadaniacharya/Desktop/flashback/client/src/components/Form/Form.js"],"names":["React","useState","useEffect","TextField","Button","Typography","Paper","FileBase","useDispatch","useSelector","useStyles","createPost","updatePost","Form","currentId","changeid","postData","setPostData","title","message","tags","selectedFiles","post","state","posts","find","p","_id","classes","dispatch","user","JSON","parse","localStorage","getItem","handleSubmit","e","preventDefault","name","result","clear","paper","root","form","target","value","split","fileInput","base64","selectedFile","buttonSubmit"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,UAA5B,EAAwCC,KAAxC,QAAoD,mBAApD;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,SAAP,MAAsB,UAAtB;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,qBAAvC;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA6B;AAAA;;AACtC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC;AAACiB,IAAAA,KAAK,EAAC,EAAP;AAAUC,IAAAA,OAAO,EAAE,EAAnB;AAAuBC,IAAAA,IAAI,EAAE,EAA7B;AAAiCC,IAAAA,aAAa,EAAE;AAAhD,GAAD,CAAxC;AACA,QAAMC,IAAI,GAAGb,WAAW,CAAEc,KAAD,IAAWT,SAAS,GAAGS,KAAK,CAACC,KAAN,CAAYC,IAAZ,CAAkBC,CAAD,IAAOA,CAAC,CAACC,GAAF,KAAUb,SAAlC,CAAH,GAAkD,IAAvE,CAAxB;AACA,QAAMc,OAAO,GAAGlB,SAAS,EAAzB;AACA,QAAMmB,QAAQ,GAAGrB,WAAW,EAA5B;AACA,QAAMsB,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAb;AAEAhC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGoB,IAAH,EAASL,WAAW,CAACK,IAAD,CAAX;AACZ,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;;AAIA,QAAMa,YAAY,GAAIC,CAAD,IAAO;AAExBA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAGvB,SAAS,KAAI,CAAhB,EAAoB;AAAA;;AAChBe,MAAAA,QAAQ,CAACjB,UAAU,CAACE,SAAD,EAAY,EAAC,GAAGE,QAAJ;AAAcsB,QAAAA,IAAI,EAAER,IAAF,aAAEA,IAAF,uCAAEA,IAAI,CAAES,MAAR,iDAAE,aAAcD;AAAlC,OAAZ,CAAX,CAAR;AACH,KAFD,MAEO;AAAA;;AACHT,MAAAA,QAAQ,CAAClB,UAAU,CAAC,EAAE,GAAGK,QAAL;AAAesB,QAAAA,IAAI,EAAER,IAAF,aAAEA,IAAF,wCAAEA,IAAI,CAAES,MAAR,kDAAE,cAAcD;AAAnC,OAAD,CAAX,CAAR;AACH;;AACDE,IAAAA,KAAK;AACR,GAVD;;AAYA,QAAMA,KAAK,GAAG,MAAM;AAChBzB,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAE,IAAAA,WAAW,CAAC;AAAEC,MAAAA,KAAK,EAAC,EAAR;AAAWC,MAAAA,OAAO,EAAE,EAApB;AAAwBC,MAAAA,IAAI,EAAE,EAA9B;AAAkCC,MAAAA,aAAa,EAAE;AAAjD,KAAD,CAAX;AACH,GAHD;;AAKA,MAAI,EAACS,IAAD,aAACA,IAAD,wCAACA,IAAI,CAAES,MAAP,kDAAC,cAAcD,IAAf,CAAJ,EAAyB;AACrB,wBACI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAEV,OAAO,CAACa,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,KAAK,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+EADJ,CADJ;AAQH;;AAED,sBACI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEb,OAAO,CAACa,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,YAAY,EAAG,KAArB;AAA2B,IAAA,UAAU,MAArC;AAAsC,IAAA,SAAS,EAAG,GAAEb,OAAO,CAACc,IAAK,IAAGd,OAAO,CAACe,IAAK,EAAjF;AAAoF,IAAA,QAAQ,EAAER,YAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAG,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BrB,SAAS,GAAG,SAAH,GAAe,UAArD,iBADJ,eAQI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,OAAO,EAAC,UAFZ;AAGI,IAAA,KAAK,EAAG,OAHZ;AAII,IAAA,SAAS,MAJb;AAIc,IAAA,KAAK,EAAEE,QAAQ,CAACE,KAJ9B;AAKI,IAAA,QAAQ,EAAGkB,CAAD,IAAOnB,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeE,MAAAA,KAAK,EAAEkB,CAAC,CAACQ,MAAF,CAASC;AAA/B,KAAD,CALhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,eAcI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAC,SADT;AAEI,IAAA,OAAO,EAAC,UAFZ;AAGI,IAAA,KAAK,EAAG,SAHZ;AAII,IAAA,SAAS,MAJb;AAIc,IAAA,KAAK,EAAE7B,QAAQ,CAACG,OAJ9B;AAKI,IAAA,QAAQ,EAAGiB,CAAD,IAAOnB,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeG,MAAAA,OAAO,EAAEiB,CAAC,CAACQ,MAAF,CAASC;AAAjC,KAAD,CALhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdJ,eAoBI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,OAAO,EAAC,UAFZ;AAGI,IAAA,KAAK,EAAG,MAHZ;AAII,IAAA,SAAS,MAJb;AAIc,IAAA,KAAK,EAAE7B,QAAQ,CAACI,IAJ9B;AAKI,IAAA,QAAQ,EAAGgB,CAAD,IAAOnB,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeI,MAAAA,IAAI,EAAEgB,CAAC,CAACQ,MAAF,CAASC,KAAT,CAAeC,KAAf,CAAqB,GAArB;AAArB,KAAD,CALhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBJ,eA2BI;AAAK,IAAA,SAAS,EAAElB,OAAO,CAACmB,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,QAAQ,EAAE,KAFd;AAGI,IAAA,MAAM,EAAE,CAAC;AAACC,MAAAA;AAAD,KAAD,KAAc/B,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeiC,MAAAA,YAAY,EAACD;AAA5B,KAAD,CAHrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CA3BJ,eAoCI,oBAAC,MAAD;AACI,IAAA,SAAS,EAAEpB,OAAO,CAACsB,YADvB;AAGI,IAAA,OAAO,EAAC,WAHZ;AAII,IAAA,KAAK,EAAE,SAJX;AAKI,IAAA,IAAI,EAAC,OALT;AAMI,IAAA,IAAI,EAAC,QANT;AAOI,IAAA,SAAS,MAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApCJ,eA8CI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAC,WADZ;AAEI,IAAA,KAAK,EAAE,WAFX;AAGI,IAAA,IAAI,EAAC,OAHT;AAII,IAAA,OAAO,EAAEV,KAJb;AAKI,IAAA,SAAS,MALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aA9CJ,CADJ,CADJ;AA6DH,CApGD;;AAsGA,eAAe3B,IAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { TextField, Button, Typography, Paper} from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport useStyles from './styles';\nimport { createPost, updatePost } from '../../actions/posts';\n\nconst Form = ({ currentId, changeid }) => {\n    const [postData, setPostData] = useState({title:'',message: '', tags: '', selectedFiles: ''});\n    const post = useSelector((state) => currentId ? state.posts.find((p) => p._id === currentId) : null);\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const user = JSON.parse(localStorage.getItem('profile'));\n\n    useEffect(() => {\n        if(post) setPostData(post);\n    }, [post])\n\n    const handleSubmit = (e) => {\n\n        e.preventDefault();\n\n        if(currentId ===0 ) {\n            dispatch(updatePost(currentId, {...postData, name: user?.result?.name}));    \n        } else {\n            dispatch(createPost({ ...postData, name: user?.result?.name}));\n        }\n        clear();\n    };\n\n    const clear = () => {\n        changeid(null);\n        setPostData({ title:'',message: '', tags: '', selectedFiles: ''});\n    };\n\n    if (!user?.result?.name) {\n        return (\n            <Paper className={classes.paper}>\n                <Typography variant=\"h6\" align=\"center\">\n                    Please Sign In to create your own memories and like other's memories.\n                </Typography>\n            </Paper>\n            \n        );\n    }\n\n    return (\n        <Paper className={classes.paper}>\n            <form autoComplete = \"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n                <Typography variant = \"h6\">{ currentId ? 'Editing' : 'Creating' } a FlashBack</Typography>\n                {/* <TextField \n                    name=\"creator\" \n                    variant='outlined' \n                    label = \"Creator\" \n                    fullWidth value={postData.creator}\n                    onChange={(e) => setPostData({ ...postData, creator: e.target.value })}/> */}\n                <TextField \n                    name=\"title\" \n                    variant='outlined' \n                    label = \"Title\" \n                    fullWidth value={postData.title}\n                    onChange={(e) => setPostData({ ...postData, title: e.target.value })}/>\n                <TextField \n                    name=\"message\" \n                    variant='outlined' \n                    label = \"Message\" \n                    fullWidth value={postData.message}\n                    onChange={(e) => setPostData({ ...postData, message: e.target.value })}/>\n                <TextField \n                    name=\"tags\" \n                    variant='outlined' \n                    label = \"Tags\" \n                    fullWidth value={postData.tags}\n                    onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })}/>\n\n                <div className={classes.fileInput}>\n                    <FileBase\n                        type=\"file\"\n                        multiple={false}\n                        onDone={({base64}) => setPostData({ ...postData, selectedFile:base64})}\n                    />\n                </div>\n                \n\n                <Button \n                    className={classes.buttonSubmit} \n\n                    variant=\"contained\" \n                    color= \"primary\"\n                    size=\"large\"\n                    type=\"submit\"\n                    fullWidth>Submit\n                </Button>\n\n                <Button \n                    variant=\"contained\" \n                    color= \"secondary\"\n                    size=\"small\"\n                    onClick={clear}\n                    fullWidth>Clear\n                </Button>\n                \n                \n            </form>\n        </Paper>\n\n    );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}